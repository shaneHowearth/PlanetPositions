// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sun.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SunriseRequest struct {
	Api                  string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Longitude            float64              `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64              `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SunriseRequest) Reset()         { *m = SunriseRequest{} }
func (m *SunriseRequest) String() string { return proto.CompactTextString(m) }
func (*SunriseRequest) ProtoMessage()    {}
func (*SunriseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df5d86f47d451473, []int{0}
}

func (m *SunriseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SunriseRequest.Unmarshal(m, b)
}
func (m *SunriseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SunriseRequest.Marshal(b, m, deterministic)
}
func (m *SunriseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SunriseRequest.Merge(m, src)
}
func (m *SunriseRequest) XXX_Size() int {
	return xxx_messageInfo_SunriseRequest.Size(m)
}
func (m *SunriseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SunriseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SunriseRequest proto.InternalMessageInfo

func (m *SunriseRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SunriseRequest) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *SunriseRequest) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *SunriseRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type SunriseTime struct {
	Api                  string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Sunrise              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=sunrise,proto3" json:"sunrise,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SunriseTime) Reset()         { *m = SunriseTime{} }
func (m *SunriseTime) String() string { return proto.CompactTextString(m) }
func (*SunriseTime) ProtoMessage()    {}
func (*SunriseTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_df5d86f47d451473, []int{1}
}

func (m *SunriseTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SunriseTime.Unmarshal(m, b)
}
func (m *SunriseTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SunriseTime.Marshal(b, m, deterministic)
}
func (m *SunriseTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SunriseTime.Merge(m, src)
}
func (m *SunriseTime) XXX_Size() int {
	return xxx_messageInfo_SunriseTime.Size(m)
}
func (m *SunriseTime) XXX_DiscardUnknown() {
	xxx_messageInfo_SunriseTime.DiscardUnknown(m)
}

var xxx_messageInfo_SunriseTime proto.InternalMessageInfo

func (m *SunriseTime) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SunriseTime) GetSunrise() *timestamp.Timestamp {
	if m != nil {
		return m.Sunrise
	}
	return nil
}

func init() {
	proto.RegisterType((*SunriseRequest)(nil), "v1.SunriseRequest")
	proto.RegisterType((*SunriseTime)(nil), "v1.SunriseTime")
}

func init() { proto.RegisterFile("sun.proto", fileDescriptor_df5d86f47d451473) }

var fileDescriptor_df5d86f47d451473 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xb1, 0x8e, 0xd3, 0x30,
	0x1c, 0xc6, 0xe5, 0xf6, 0x74, 0x47, 0x7d, 0x12, 0x9c, 0xbc, 0x50, 0x45, 0x27, 0x61, 0x75, 0xaa,
	0x2a, 0x12, 0xb7, 0xa5, 0xd3, 0xb1, 0x00, 0x0b, 0x7b, 0x0a, 0x0f, 0xe0, 0xa6, 0x7f, 0x12, 0x9f,
	0x52, 0xdb, 0x67, 0xff, 0xdd, 0x22, 0x95, 0x2e, 0xcc, 0x0c, 0x08, 0x36, 0x5e, 0x8b, 0x57, 0xe0,
	0x1d, 0x18, 0x58, 0x50, 0x9c, 0xf4, 0xe0, 0x74, 0x88, 0x29, 0xc9, 0xf7, 0xfd, 0xf2, 0xf7, 0xf7,
	0xd9, 0xa6, 0x03, 0x1f, 0x74, 0x66, 0x9d, 0x41, 0xc3, 0x7a, 0xdb, 0x59, 0xf2, 0xa4, 0x34, 0xa6,
	0xac, 0x41, 0x44, 0x65, 0x15, 0xde, 0x09, 0x54, 0x1b, 0xf0, 0x28, 0x37, 0xb6, 0x85, 0x92, 0xcb,
	0x0e, 0x90, 0x56, 0x09, 0xa9, 0xb5, 0x41, 0x89, 0xca, 0x68, 0xdf, 0xb9, 0x4f, 0xe3, 0xa3, 0x48,
	0x4b, 0xd0, 0xa9, 0xdf, 0xc9, 0xb2, 0x04, 0x27, 0x8c, 0x8d, 0xc4, 0x7d, 0x7a, 0xf4, 0x89, 0xd0,
	0x87, 0xcb, 0xa0, 0x9d, 0xf2, 0x90, 0xc3, 0x4d, 0x00, 0x8f, 0xec, 0x82, 0xf6, 0xa5, 0x55, 0x43,
	0xc2, 0xc9, 0x78, 0x90, 0x37, 0xaf, 0xec, 0x92, 0x0e, 0x6a, 0xa3, 0x4b, 0x85, 0x61, 0x0d, 0xc3,
	0x1e, 0x27, 0x63, 0x92, 0xff, 0x11, 0x58, 0x42, 0x1f, 0xd4, 0x12, 0x5b, 0xb3, 0x1f, 0xcd, 0xdb,
	0x6f, 0x96, 0xd1, 0x93, 0xb5, 0x44, 0x18, 0x9e, 0x70, 0x32, 0x3e, 0x9f, 0x27, 0x59, 0x9b, 0x3c,
	0x3b, 0x56, 0xcb, 0xde, 0x1c, 0xab, 0xe5, 0x91, 0x1b, 0xbd, 0xa5, 0xe7, 0x5d, 0x9a, 0xc6, 0xf9,
	0x47, 0x94, 0x05, 0x3d, 0xf3, 0x2d, 0x10, 0x83, 0xfc, 0x7f, 0xe6, 0x11, 0x9d, 0xdf, 0x50, 0xba,
	0x0c, 0x7a, 0x09, 0x6e, 0xab, 0x0a, 0x60, 0x05, 0xa5, 0xaf, 0x01, 0xbb, 0x75, 0x18, 0xcb, 0xb6,
	0xb3, 0xec, 0xee, 0x16, 0x24, 0x8f, 0xfe, 0xd2, 0x9a, 0x71, 0xa3, 0xe9, 0xc7, 0xef, 0x3f, 0xbe,
	0xf6, 0x26, 0x6c, 0xbc, 0x9d, 0x89, 0x6e, 0xa8, 0xd8, 0xdf, 0x6e, 0xc1, 0x41, 0xec, 0x8f, 0x8d,
	0x0f, 0x62, 0xdf, 0x14, 0x39, 0xbc, 0xfa, 0x45, 0xbe, 0xbc, 0xfc, 0x49, 0xd8, 0x67, 0x12, 0x1b,
	0x71, 0xdf, 0xae, 0x3d, 0xfa, 0x40, 0x45, 0x69, 0xd2, 0xd2, 0xd9, 0x22, 0xad, 0x10, 0x6d, 0xea,
	0xc0, 0x63, 0xba, 0x51, 0x85, 0x33, 0x1d, 0x91, 0x62, 0x40, 0xe3, 0x94, 0xac, 0xb9, 0x75, 0xe6,
	0x1a, 0x0a, 0x64, 0xd3, 0x06, 0xf4, 0x57, 0x42, 0x94, 0x0a, 0xab, 0xb0, 0xca, 0x0a, 0xb3, 0x11,
	0xbe, 0x92, 0x1a, 0x2a, 0xb3, 0x03, 0xe9, 0xb0, 0x12, 0xb6, 0x96, 0x1a, 0xd0, 0x1a, 0xaf, 0xe2,
	0xd1, 0x26, 0x8f, 0xa3, 0xfd, 0xe2, 0x0e, 0xd4, 0xfc, 0x36, 0xef, 0xcf, 0xb2, 0xe9, 0x84, 0x90,
	0xf9, 0x85, 0xb4, 0xb6, 0x56, 0x45, 0xbc, 0x09, 0xe2, 0xda, 0x1b, 0x7d, 0x75, 0x4f, 0xc9, 0x9f,
	0xd3, 0xfe, 0x62, 0xba, 0x60, 0x0b, 0x3a, 0xc9, 0x01, 0x83, 0xd3, 0xb0, 0xe6, 0xbb, 0x0a, 0x34,
	0xc7, 0x0a, 0xb8, 0x03, 0x6f, 0x82, 0x2b, 0x80, 0xaf, 0x0d, 0x78, 0xae, 0x0d, 0x72, 0x78, 0xaf,
	0x3c, 0x66, 0xec, 0x94, 0x9e, 0x7c, 0xeb, 0x91, 0xb3, 0xd5, 0x69, 0x3c, 0x8d, 0x67, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x4a, 0x10, 0x4f, 0xd4, 0xdb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SunServiceClient is the client API for SunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SunServiceClient interface {
	// Get sunrise
	GetSunrise(ctx context.Context, in *SunriseRequest, opts ...grpc.CallOption) (*SunriseTime, error)
}

type sunServiceClient struct {
	cc *grpc.ClientConn
}

func NewSunServiceClient(cc *grpc.ClientConn) SunServiceClient {
	return &sunServiceClient{cc}
}

func (c *sunServiceClient) GetSunrise(ctx context.Context, in *SunriseRequest, opts ...grpc.CallOption) (*SunriseTime, error) {
	out := new(SunriseTime)
	err := c.cc.Invoke(ctx, "/v1.SunService/GetSunrise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SunServiceServer is the server API for SunService service.
type SunServiceServer interface {
	// Get sunrise
	GetSunrise(context.Context, *SunriseRequest) (*SunriseTime, error)
}

func RegisterSunServiceServer(s *grpc.Server, srv SunServiceServer) {
	s.RegisterService(&_SunService_serviceDesc, srv)
}

func _SunService_GetSunrise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SunriseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SunServiceServer).GetSunrise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SunService/GetSunrise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SunServiceServer).GetSunrise(ctx, req.(*SunriseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.SunService",
	HandlerType: (*SunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSunrise",
			Handler:    _SunService_GetSunrise_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sun.proto",
}
